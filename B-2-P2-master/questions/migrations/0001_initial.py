# Generated by Django 3.2.3 on 2021-05-31 17:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pawn.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('communities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=280)),
                ('summary', models.TextField(max_length=380)),
                ('slug', models.SlugField(blank=True, max_length=480)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('solved', models.BooleanField(default=False)),
                ('edited', models.BooleanField(default=False)),
                ('category', models.PositiveSmallIntegerField(choices=[(0, 'Random'), (1, 'Movie'), (2, 'Music'), (3, 'News'), (4, 'Celebrity'), (5, 'TV Shows'), (6, 'Games'), (7, 'General'), (8, 'Business'), (9, 'Sports'), (10, 'Academic'), (11, 'Social')], default=0)),
                ('bookmark', models.ManyToManyField(blank=True, related_name='bookmark', to=settings.AUTH_USER_MODEL)),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='communities.community')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('thumbsdown', models.ManyToManyField(blank=True, related_name='question_thumbsdown', to=settings.AUTH_USER_MODEL)),
                ('thumbsup', models.ManyToManyField(blank=True, related_name='question_thumbsup', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('viewed', models.ManyToManyField(blank=True, related_name='viewed', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', pawn.models.PawnField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('pinned', models.BooleanField(default=False)),
                ('edited', models.BooleanField(default=False)),
                ('downvote', models.ManyToManyField(blank=True, related_name='questioncomment_downvote', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions.question')),
                ('upvote', models.ManyToManyField(blank=True, related_name='questioncomment_upvote', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
